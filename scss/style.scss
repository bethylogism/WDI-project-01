$darkborder: 3px double black;
$shadow: 0 0 50px 0 rgba(0, 0, 0, 0.6);
$rainbow: linear-gradient(0.35turn, red, orange, green, blue, violet);
$rainbow-light: linear-gradient(0.45turn, red, orange, green, blue, violet);

* {
  box-sizing: border-box;
  font-family: "Poiret One", sans-serif;
//   @media screen and (min-width: 900px) and (max-width: 700px) {
//     font-size: 1.1rem;
//   }
//   @media screen and (max-width: 500px) {
//   font-size: 1rem;
// }
  // text-transform: uppercase;
}

h1, h2, h3 {
  color: black;
  text-align: center;
  @media screen and (max-width: 700px) {
    margin: 10px;
    //font-size: 2.5rem;
  }
}

p {
  text-align: center;
}

main, .welcome {
  max-width: 380px;
  border-radius: 10px;
  margin: 0 auto;
  // border: $darkborder;
  box-shadow: $shadow;
  padding: 20px;
  /* mobile & iPad view */
  @media screen and (max-width: 700px) {
      max-width: none;
      //width: 90vw;
      margin: 0 auto;
      box-shadow: none;
      padding: none;
  }
  @media screen and (max-width: 500px) {
      max-width: none;
      //width: 100vw;
      margin: auto;
      box-shadow: none;
      padding: none;
  }
}
WELCOME SCREEN BACKGROUND
// .behind {
//   img {
//
//   }
// }
.behind {
  display: block;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  //overflow: auto;
  //background-color: rgb(0,0,0);
  //background-color: rgba(0,0,0,0.4);
  background-image: url('../assets/mastermind-01.jpg');
  background-position: center;
  background-repeat: no-repeat;
  background-size: 40%;
}

.board {
  align-items: center;
  display: flex;
  //height: 60vh;
  justify-content: center;
  margin: 0;
  //background-color: red;
}


button {
  font-family: 'Raleway', sans-serif;
  font-weight: 700;
  border: $darkborder;
  //box-shadow: $shadow;
  //padding: 5px 15px 5px 15px;
  &:focus  {
    outline: none;
  }
  &:hover {
    background-color: black;
    color: white;
  }
  &:active {
    outline: -webkit-focus-ring-color auto 5px;
  }
}


.flex {
  display: flex;
  flex-wrap: wrap;
}

.ball {
  height: 25px;
  width: 25px;
  border: $darkborder;
  transition:all 0.4s;
  border-radius: 100%;
  margin: 2px;
  transition: all .5s;
  @media screen and (max-width: 700px) {
    height: 40px;
    width: 40px;
  }
  @media screen and (max-width: 500px) {
    height: 25px;
    width: 25px;
  }
}


.grid {
  align-items: center;
  display: flex;
  //flex-grow: 1;
  flex-wrap: wrap;
  height: 100%;
  justify-content: center;
  //  & div {
  //   //border: 1px solid black;
  // }
}

section {
  justify-content: center; // this is getting overridden
  padding: 3px 10px;
  // border: $lightborder;
  margin: 1px;

  &.codeMaster {
    //background: black;
    background-image: url('../assets/questions.png');
    height: 55px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 40%;
    @media screen and (max-width: 700px) {
      height: 50px;
      background-size: 25%;
    }
    @media screen and (max-width: 500px) {
      height: 50px;
      background-size: 35%;
    }
      & .master {
      // opacity: 0.9;
    }
  }
  &.codeBreaker { // the repeating  div with the 3 core divs in
    //background: #ff00ff;
    justify-content: space-around;
    width: 80%;

    .spacer {
    //flex-grow: 1;
    width: 20%;
    //background: blue;
    //justify-content: space-around;
    //justify-content: center;
    }
    .end {
      justify-content: flex-end;
    }
    .breakerBalls {
      //background: orange;
      justify-content: center;
    }
    button { //attempt button
        @media screen and (max-width: 700px) {
        padding: 0 10px;
      }
        @media screen and (max-width: 500px) {
        padding: 0 20px;
      }
    }
    .computerSays {
      display: flex;
      flex-wrap: wrap;
      width: 30px;
      height: 30px;
      border: $darkborder;

      //box-shadow: $shadow;
      //margin: 0 15px 0 42px;
      @media screen and (max-width: 700px) {
      width: 40px;
      height: 40px;
      }
      @media screen and (max-width: 500px) {
        height: 30px;
        width: 30px;
      }
      .clues {
        background-color: grey;
        border: 1px solid black;
        height: 50%;
        width: 50%;
        border-radius: 100%;
        transition: all .5s;
      }
    }
  }
}


.reset, .play, .start {
  width: 50%;
  margin: 10px;
  background-image: $rainbow;
  color: white;
  border: none;
  font-size: 1rem;
  padding: 10px;
  &:hover {
    background-image: $rainbow-light;
  }

  @media screen and (max-width: 500px) {
    width: 80%;
  }
}


.vanish {
   display: none;
  transition: all 0.5s;
  pointer-events: none;
}

.invisible {
  opacity: 0;
  transition: all 0.1s;
  pointer-events: none;
}
.semi-visible {
  opacity: 0.5;
  transition: all 0.6s;
  pointer-events: none;
}

.option {
  cursor: copy;
}

/* The Modal Background */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.4);
  //background-image: url('../assets/mastermind-01.jpg')
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 70%;
  @media screen and (max-width: 700px) {
    width: 90%;
  }

    .instructions-flex {
      display: flex;
      flex-grow: 1;
      justify-content: center;
      @media screen and (max-width: 500px) {
        display: block;
      }
      figure {
        width: 30%;

        @media screen and (max-width: 500px) {
          max-width: inherit;
        }
      }
      .test-clues {
        margin: 10px 0;
        border: 1px solid black;
        height: 15px;
        width: 15px;
        border-radius: 100%;
        transition: all .5s;
      }
      .black-clue {
        background-color: black;
      }
      .white-clue {
        background-color: white;
      }
      .red-clue {
        background-color: red;
    }
  }
}

/* The Close Button */
.close, .close-outcome {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}

//HOVER STATES
//make css classes called different colours: .red .yellow. etc
//create .red:hover {background-color: [variation]} colours within that
.option, .codeMaster {
  animation-duration: 0.4s;
  animation-iteration-count: infinite;
  animation-name: wobble;
  animation-timing-function: ease-in-out;
}

.option:hover {
  animation: none;
}

@keyframes wobble {
      0% { transform: rotate( 0   ) translate3d( 0,    0,   0) }
     25% { transform: rotate( 2deg) translate3d( 1px,  0,   0) }
     50% { transform: rotate(-1deg) translate3d( 0,   -1px, 0) }
     75% { transform: rotate( 1deg) translate3d(-1px,  0  , 0) }
    100% { transform: rotate(-2deg) translate3d(-1px, -1px, 0) }

}
